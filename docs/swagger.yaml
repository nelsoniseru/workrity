openapi: 3.0.0
info:
  title: Product Catalog API
  version: 1.0.0
paths:
  /api/products:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                price: { type: number }
                stock: { type: number }
      responses:
        '201': { description: Product created }
        '400': { description: Invalid input }
    get:
      summary: Get all products
      responses:
        '200': { description: List of products }
  /api/products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Product details }
        '404': { description: Product not found }
    put:
      summary: Update a product
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                price: { type: number }
                stock: { type: number }
      responses:
        '200': { description: Product updated }
        '400': { description: Invalid input }
        '404': { description: Product not found }
    delete:
      summary: Delete a product
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204': { description: Product deleted }
        '404': { description: Product not found }
  /api/products/search/items:
    get:
      summary: Search products
      parameters:
        - name: name
          in: query
          schema: { type: string }
        - name: minPrice
          in: query
          schema: { type: number }
        - name: maxPrice
          in: query
          schema: { type: number }
      responses:
        '200': { description: List of matching products }
        '400': { description: Invalid query }